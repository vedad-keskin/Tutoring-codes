#include <iostream>
using namespace std;

char* GetNizKaraktera(const char* tekst) {
	if (tekst == nullptr)
		return nullptr;
	int vel = strlen(tekst) + 1;
	char* novi = new char[vel];
	strcpy_s(novi, vel, tekst);
	return novi;
}


template<class T>
class Kolekcija {
public:
	T* _niz;
	int _max;
	int _trenutno;
	//Kreirati i implementirati
	// 1. Defaultni konstruktor
	// 2. Konstruktor koji prima parametre
	// 3. Konstruktor kopije
	// 4. Operator dodjele
	// 5. Destruktor
	// 6. Operator ispisa 
	// 7. Potrebne funkcije


	void AddElement(T el) {
		// Dodaje element tipa T u niz
		// Onemogućiti izlazak niza izvan opsega bacajem izuzetka tipa Exception
		// Onemogućiti dupliranje elemenata bacajem izuzetka tipa Exception

	}


	bool IsEmpty() {
		// Vršiti provjeru da li je niz prazan

	}


	bool Remove() {
		// Uklanja zadnji element iz niza

	}


	bool RemoveAt(int lokacija) {
		// Uklanja element na određenoj poziciji

	}


	bool RemoveAt(T el) {
		// Uklanja element koji je jednak proslijeđenom

	}


	void InsertAt(T el, int lokacija) {
		// Dodaje element na određenu lokaciju

	}


	T* GetNajmanjiElement() {
		// Vraća najmanji element iz niza i to kao pokazivač

	}


};

class Zivotinja {
private:
	char* _naziv;
	int _tezina;
public:
	//Kreirati i implementirati
	// 1. Defaultni konstruktor
	// 2. Konstruktor koji prima parametre
	// 3. Konstruktor kopije
	// 4. Operator dodjele
	// 5. Destruktor
	// 6. Operator ispisa 
	// 7. Operatori poredjenja




	// Operator == na način da poredi po vrsti životinje da li su dvije životinje iste
	   
	   
	// Operator > na način da poredi da li je težina prve životinje veća od težine druge


};

void main() {




	system("pause>0");
}
